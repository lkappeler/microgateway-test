basePath: /v1
consumes:
    - application/json
definitions:
    Ascent:
        additionalProperties: false
        properties:
            date: {type: string}
            id: {type: string}
            route: {type: string}
        type: object
    AscentCreate:
        additionalProperties: false
        properties:
            date: {type: string}
            route: {type: string}
        required:
            - route
        type: object
    AscentList:
        additionalProperties: false
        properties:
            results: {items: [{additionalProperties: false, properties: {date: {type: string}, id: {type: string}, route: {type: string}}, type: object}], type: array}
            total_results: {type: integer}
        type: object
    AscentUpdate:
        additionalProperties: false
        properties:
            date: {type: string}
            route: {type: string}
        type: object
    Error:
        additionalProperties: false
        properties:
            message: {type: [string, array]}
            status: {type: integer}
        type: object
host: 'localhost:3000'
info:
    contact:
        email: joedeveloper@someemailservice.com
        name: 'Joe API Developer'
        url: 'http://developer.acme.com/contacturl'
    description: 'The /v1 set of Ascent APIs'
    license:
        name: 'License Name Goes Here...'
        url: 'http://developer.acme.com/licenseurl'
    termsOfService: 'The Terms of Service for the API are ...'
    title: ascents
    version: 1.0.0
    x-ibm-name: ascents
paths:
    /ascents:
        get:
            deprecated: false
            description: 'List Ascent'
            operationId: list
            parameters: [{description: 'What element to start the list at, default is 0', in: query, name: offset, required: false, type: string}, {description: 'Total number of items to return, default is 10', in: query, name: limit, required: false, type: string}]
            responses: {'200': {description: Success, schema: {$ref: '#/definitions/AscentList'}}, default: {description: 'Unexpected error', schema: {$ref: '#/definitions/Error'}}}
            summary: 'List Ascent'
            tags: [Ascent]
        post:
            deprecated: false
            description: 'Create a Ascent'
            parameters: [{description: 'Ascent to create', in: body, name: payload, required: true, schema: {$ref: '#/definitions/AscentCreate'}}]
            responses: {'201': {description: 'Successful create', schema: {$ref: '#/definitions/Ascent'}}, default: {description: 'Unexpected error', schema: {$ref: '#/definitions/Error'}}}
            summary: 'Create a Ascent'
            tags: [Ascent]
    '/ascents/{ascent}':
        delete:
            deprecated: false
            description: 'Delete the Ascent'
            operationId: del
            parameters: [{description: 'Ascent id', in: path, name: ascent, required: true, type: string}]
            responses: {'204': {description: 'Successful delete'}, default: {description: 'Unexpected error', schema: {$ref: '#/definitions/Error'}}}
            summary: 'Delete the Ascent'
            tags: [Ascent]
        get:
            deprecated: false
            description: 'Retrieve the Ascent'
            parameters: [{description: 'Ascent id', in: path, name: ascent, required: true, type: string}, {description: 'Return a subset of the fields', in: query, name: fields, required: false, type: string}]
            responses: {'200': {description: Success, schema: {$ref: '#/definitions/Ascent'}}, default: {description: 'Unexpected error', schema: {$ref: '#/definitions/Error'}}}
            summary: 'Retrieve the Ascent'
            tags: [Ascent]
        put:
            deprecated: false
            description: 'Update Ascent'
            parameters: [{description: 'Ascent id', in: path, name: ascent, required: true, type: string}, {description: 'Ascent to update', in: body, name: payload, required: true, schema: {$ref: '#/definitions/AscentUpdate'}}]
            responses: {'200': {description: Success, schema: {$ref: '#/definitions/Ascent'}}, default: {description: 'Unexpected error', schema: {$ref: '#/definitions/Error'}}}
            summary: 'Update Ascent'
            tags: [Ascent]
produces:
    - application/json
schemes:
    - https
security:
    -
        apikeyHeader: []
    -
        apikeyQueryParameter: []
securityDefinitions:
    apikeyHeader:
        in: header
        name: X-IBM-Client-Id
        type: apiKey
    apikeyQueryParameter:
        in: query
        name: client_id
        type: apiKey
    oauthImplicit:
        authorizationUrl: 'http://swagger.io/api/oauth/dialog'
        flow: implicit
        scopes:
            scope1: 'blah description'
            scope2: 'blah blah description'
        type: oauth2
        x-ibm-oauth2:
            authentication: [basicAuth, form]
            authenticationForm: {tlsClient: 'Some SSL Profile Configuration Name', url: 'https://somehost.com/authenticate'}
            authenticationRegistry: 'Some Registry Configuration Name'
            authenticationUrl: {tlsClient: 'Some SSL Profile Configuration Name', url: 'https://somehost.com/authenticate'}
            authorization: form
            authorizationForm: {tlsClient: 'Some SSL Profile Configuration Name', url: 'https://somehost.com/authorization'}
            refreshToken: false
            revocationUrl: {tlsClient: 'Some SSL Profile Configuration Name', url: 'https://somehost.com/revoke'}
swagger: '2.0'
x-ibm-configuration:
    assembly:
        execute:
            - {invoke: {target-url: 'http://127.0.0.1:8889/api1'}}
    cors:
        enabled: false
    enforced: true
    phase: identified
    testable: false
